#ifndef CLSTANGOIMAGEBUFFER_HPP
#define CLSTANGOIMAGEBUFFER_HPP
#include <tango_client_api.h>

#include <opencv2/core/core.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>

class ClsTangoImageBuffer:public TangoImageBuffer{
std::string to_str(double timestamp){
	std::ostringstream stm ;
	stm << timestamp ;
	return stm.str();
}
public:
	ClsTangoImageBuffer(const TangoImageBuffer* data){
		int bufsize;
		width = data->width;
		height = data->height;
		bufsize = width * ((height*3)/2);

		stride = data->stride;
		timestamp = data->timestamp;
		frame_number = data->frame_number;
		format = data->format;

		this->data = new uint8_t[bufsize];
		memcpy(this->data, data->data, bufsize);
	}
	
	~ClsTangoImageBuffer(){
		delete[] data;
	}

	int write_to_file(std::string path, std::string name){
		int bufsize;
		// TODO: Convert format from RGBA_8888 to BGRA_8888
		cv::Mat imageNV21((height*3)/2, width, CV_8UC1, data);
		cv::Mat imageRGBA(height, width, CV_8UC3,0);
		cv::cvtColor(imageNV21, imageRGBA, CV_YUV2BGR_NV21);

		std::string filename = path + std::string("/");
		filename += name + std::string("_") + to_str(timestamp) + std::string(".jpeg");
		LOGI("Writing to file %s", filename.c_str());
		cv::imwrite(filename.c_str(), imageRGBA);
		imageNV21.release();
		imageRGBA.release();
		//TODO: Error Code
		return 0;
	}
private:
	
};
#endif
